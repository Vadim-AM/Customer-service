{"uid":"262018d46ef6e671","name":"User can change his data","fullName":"tests.ui_tests.test_account_page.TestAccountPage#test_user_can_edit_profile","historyId":"a9b570b02d40eda8b7593463f31d1d4f","time":{"start":1687019733844,"stop":1687019735756,"duration":1912},"description":"User can change his own profile","descriptionHtml":"<p>User can change his own profile</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: move target out of bounds\n  (Session info: chrome=114.0.5735.106)\nStacktrace:\n#0 0x5590c631e4e3 <unknown>\n#1 0x5590c604db00 <unknown>\n#2 0x5590c60ca42b <unknown>\n#3 0x5590c60a9012 <unknown>\n#4 0x5590c60c130e <unknown>\n#5 0x5590c60a8de3 <unknown>\n#6 0x5590c607e2dd <unknown>\n#7 0x5590c607f34e <unknown>\n#8 0x5590c62de3e4 <unknown>\n#9 0x5590c62e23d7 <unknown>\n#10 0x5590c62ecb20 <unknown>\n#11 0x5590c62e3023 <unknown>\n#12 0x5590c62b11aa <unknown>\n#13 0x5590c63076b8 <unknown>\n#14 0x5590c6307847 <unknown>\n#15 0x5590c6317243 <unknown>\n#16 0x7effcc5fdb43 <unknown>","statusTrace":"self = <test_account_page.TestAccountPage object at 0x7f28c15d44d0>\nmain_page = <tests.ui_tests.pages.main_page.MainPage object at 0x7f28bfe1bf50>\nuser = NewUser(id=1, username='Mary Johnson', phone_number='+79950400120')\nphone_number = '+79142788283'\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title(\"User can change his data\")\n    def test_user_can_edit_profile(self, main_page: MainPage, user: User, phone_number: str):\n        \"\"\"User can change his own profile\"\"\"\n        main_page.go_to_register_page() \\\n            .fill_user_data_and_continue(user) \\\n>           .confirm_sms_code() \\\n            .go_to_account_page() \\\n            .change_profile_data(phone_number) \\\n            .confirm_sms_code()\n\ntests/ui_tests/test_account_page.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/ui_tests/pages/sms_page.py:19: in confirm_sms_code\n    .find_and_click_element(self.SMS_CONFIRM)\ntests/ui_tests/pages/base_page.py:48: in find_and_click_element\n    EC.element_to_be_clickable(locator))).click().perform()\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/common/action_chains.py:87: in perform\n    self.w3c_actions.perform()\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/common/actions/action_builder.py:91: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f28bdc89450>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"move target out of bounds\",\"message\":\"move target out of bounds\\\\n  (Sess...\\\\n#14 0x5590c6307847 \\\\u003Cunknown>\\\\n#15 0x5590c6317243 \\\\u003Cunknown>\\\\n#16 0x7effcc5fdb43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: move target out of bounds\nE         (Session info: chrome=114.0.5735.106)\nE       Stacktrace:\nE       #0 0x5590c631e4e3 <unknown>\nE       #1 0x5590c604db00 <unknown>\nE       #2 0x5590c60ca42b <unknown>\nE       #3 0x5590c60a9012 <unknown>\nE       #4 0x5590c60c130e <unknown>\nE       #5 0x5590c60a8de3 <unknown>\nE       #6 0x5590c607e2dd <unknown>\nE       #7 0x5590c607f34e <unknown>\nE       #8 0x5590c62de3e4 <unknown>\nE       #9 0x5590c62e23d7 <unknown>\nE       #10 0x5590c62ecb20 <unknown>\nE       #11 0x5590c62e3023 <unknown>\nE       #12 0x5590c62b11aa <unknown>\nE       #13 0x5590c63076b8 <unknown>\nE       #14 0x5590c6307847 <unknown>\nE       #15 0x5590c6317243 <unknown>\nE       #16 0x7effcc5fdb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: MoveTargetOutOfBoundsException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1687019727413,"stop":1687019727429,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"app","time":{"start":1687019727429,"stop":1687019727846,"duration":417},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"server","time":{"start":1687019727846,"stop":1687019727847,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver","time":{"start":1687019732736,"stop":1687019733660,"duration":924},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"main_page","time":{"start":1687019733660,"stop":1687019733843,"duration":183},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"user","time":{"start":1687019733843,"stop":1687019733843,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"phone_number","time":{"start":1687019733844,"stop":1687019733844,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"User can change his own profile","status":"broken","statusMessage":"selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: move target out of bounds\n  (Session info: chrome=114.0.5735.106)\nStacktrace:\n#0 0x5590c631e4e3 <unknown>\n#1 0x5590c604db00 <unknown>\n#2 0x5590c60ca42b <unknown>\n#3 0x5590c60a9012 <unknown>\n#4 0x5590c60c130e <unknown>\n#5 0x5590c60a8de3 <unknown>\n#6 0x5590c607e2dd <unknown>\n#7 0x5590c607f34e <unknown>\n#8 0x5590c62de3e4 <unknown>\n#9 0x5590c62e23d7 <unknown>\n#10 0x5590c62ecb20 <unknown>\n#11 0x5590c62e3023 <unknown>\n#12 0x5590c62b11aa <unknown>\n#13 0x5590c63076b8 <unknown>\n#14 0x5590c6307847 <unknown>\n#15 0x5590c6317243 <unknown>\n#16 0x7effcc5fdb43 <unknown>","statusTrace":"self = <test_account_page.TestAccountPage object at 0x7f28c15d44d0>\nmain_page = <tests.ui_tests.pages.main_page.MainPage object at 0x7f28bfe1bf50>\nuser = NewUser(id=1, username='Mary Johnson', phone_number='+79950400120')\nphone_number = '+79142788283'\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title(\"User can change his data\")\n    def test_user_can_edit_profile(self, main_page: MainPage, user: User, phone_number: str):\n        \"\"\"User can change his own profile\"\"\"\n        main_page.go_to_register_page() \\\n            .fill_user_data_and_continue(user) \\\n>           .confirm_sms_code() \\\n            .go_to_account_page() \\\n            .change_profile_data(phone_number) \\\n            .confirm_sms_code()\n\ntests/ui_tests/test_account_page.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/ui_tests/pages/sms_page.py:19: in confirm_sms_code\n    .find_and_click_element(self.SMS_CONFIRM)\ntests/ui_tests/pages/base_page.py:48: in find_and_click_element\n    EC.element_to_be_clickable(locator))).click().perform()\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/common/action_chains.py:87: in perform\n    self.w3c_actions.perform()\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/common/actions/action_builder.py:91: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f28bdc89450>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"move target out of bounds\",\"message\":\"move target out of bounds\\\\n  (Sess...\\\\n#14 0x5590c6307847 \\\\u003Cunknown>\\\\n#15 0x5590c6317243 \\\\u003Cunknown>\\\\n#16 0x7effcc5fdb43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: move target out of bounds\nE         (Session info: chrome=114.0.5735.106)\nE       Stacktrace:\nE       #0 0x5590c631e4e3 <unknown>\nE       #1 0x5590c604db00 <unknown>\nE       #2 0x5590c60ca42b <unknown>\nE       #3 0x5590c60a9012 <unknown>\nE       #4 0x5590c60c130e <unknown>\nE       #5 0x5590c60a8de3 <unknown>\nE       #6 0x5590c607e2dd <unknown>\nE       #7 0x5590c607f34e <unknown>\nE       #8 0x5590c62de3e4 <unknown>\nE       #9 0x5590c62e23d7 <unknown>\nE       #10 0x5590c62ecb20 <unknown>\nE       #11 0x5590c62e3023 <unknown>\nE       #12 0x5590c62b11aa <unknown>\nE       #13 0x5590c63076b8 <unknown>\nE       #14 0x5590c6307847 <unknown>\nE       #15 0x5590c6317243 <unknown>\nE       #16 0x7effcc5fdb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: MoveTargetOutOfBoundsException","steps":[],"attachments":[{"uid":"2dc4bb54b3eab103","name":"log","source":"2dc4bb54b3eab103.txt","type":"text/plain","size":3832}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1687019735791,"stop":1687019735920,"duration":129},"status":"passed","steps":[],"attachments":[{"uid":"d50305dc880e8602","name":"Screenshot test_user_can_edit_profile","source":"d50305dc880e8602.png","type":"image/png","size":27854}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"server::0","time":{"start":1687019740634,"stop":1687019740642,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"severity","value":"critical"},{"name":"parentSuite","value":"tests.ui_tests"},{"name":"suite","value":"test_account_page"},{"name":"subSuite","value":"TestAccountPage"},{"name":"host","value":"fv-az255-941"},{"name":"thread","value":"2366-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.ui_tests.test_account_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"262018d46ef6e671.json","parameterValues":[]}