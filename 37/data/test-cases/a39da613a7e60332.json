{"uid":"a39da613a7e60332","name":"test_guest_can_go_to_link_page[chrome-reviews-link3]","fullName":"tests.ui_tests.test_main_page.TestMainPage#test_guest_can_go_to_link_page","historyId":"64362d87b2be404ed9eddef01032b207","time":{"start":1674633957754,"stop":1674633957801,"duration":47},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: headless chrome=109.0.5414.74)\nStacktrace:\n#0 0x559095c86303 <unknown>\n#1 0x559095a5ad37 <unknown>\n#2 0x559095a52d85 <unknown>\n#3 0x559095a45f87 <unknown>\n#4 0x559095a474e9 <unknown>\n#5 0x559095a462fe <unknown>\n#6 0x559095a45432 <unknown>\n#7 0x559095a45285 <unknown>\n#8 0x559095a43c77 <unknown>\n#9 0x559095a442a4 <unknown>\n#10 0x559095a5cc48 <unknown>\n#11 0x559095acff15 <unknown>\n#12 0x559095ab7982 <unknown>\n#13 0x559095acf88c <unknown>\n#14 0x559095ab7753 <unknown>\n#15 0x559095a8aa14 <unknown>\n#16 0x559095a8bb7e <unknown>\n#17 0x559095cd532e <unknown>\n#18 0x559095cd8c0e <unknown>\n#19 0x559095cbb610 <unknown>\n#20 0x559095cd9c23 <unknown>\n#21 0x559095cad545 <unknown>\n#22 0x559095cfa6a8 <unknown>\n#23 0x559095cfa836 <unknown>\n#24 0x559095d15d13 <unknown>\n#25 0x7f07dbee9b43 <unknown>","statusTrace":"self = <tests.ui_tests.test_main_page.TestMainPage object at 0x7f3efb8e6d90>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b95248af24ea07673553b3688f271da6\")>\npage_name = 'reviews'\nlink = ('css selector', 'body > header > div > div > ul > li:nth-child(3) > a')\n\n    @pytest.mark.parametrize('page_name, link', list(zip(PAGES, PAGES_LOCATORS)))\n    def test_guest_can_go_to_link_page(self, browser, page_name: str, link: tuple):\n        page = MainPage(browser, self.LINK)\n>       page.open()\n\ntests/ui_tests/test_main_page.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/ui_tests/pages/base_page.py:15: in open\n    self.browser.get(self.url)\n/opt/hostedtoolcache/Python/3.11.1/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:449: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.11.1/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3efa3796d0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...\\\\n#23 0x559095cfa836 \\\\u003Cunknown>\\\\n#24 0x559095d15d13 \\\\u003Cunknown>\\\\n#25 0x7f07dbee9b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: headless chrome=109.0.5414.74)\nE       Stacktrace:\nE       #0 0x559095c86303 <unknown>\nE       #1 0x559095a5ad37 <unknown>\nE       #2 0x559095a52d85 <unknown>\nE       #3 0x559095a45f87 <unknown>\nE       #4 0x559095a474e9 <unknown>\nE       #5 0x559095a462fe <unknown>\nE       #6 0x559095a45432 <unknown>\nE       #7 0x559095a45285 <unknown>\nE       #8 0x559095a43c77 <unknown>\nE       #9 0x559095a442a4 <unknown>\nE       #10 0x559095a5cc48 <unknown>\nE       #11 0x559095acff15 <unknown>\nE       #12 0x559095ab7982 <unknown>\nE       #13 0x559095acf88c <unknown>\nE       #14 0x559095ab7753 <unknown>\nE       #15 0x559095a8aa14 <unknown>\nE       #16 0x559095a8bb7e <unknown>\nE       #17 0x559095cd532e <unknown>\nE       #18 0x559095cd8c0e <unknown>\nE       #19 0x559095cbb610 <unknown>\nE       #20 0x559095cd9c23 <unknown>\nE       #21 0x559095cad545 <unknown>\nE       #22 0x559095cfa6a8 <unknown>\nE       #23 0x559095cfa836 <unknown>\nE       #24 0x559095d15d13 <unknown>\nE       #25 0x7f07dbee9b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.1/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1674633956839,"stop":1674633957753,"duration":914},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0}],"afterStages":[{"name":"browser::0","time":{"start":1674633957834,"stop":1674633958046,"duration":212},"status":"passed","steps":[],"attachments":[{"uid":"56cab0d5b1d37a5a","name":"Screenshot test_guest_can_go_to_link_page[chrome-reviews-link3]","source":"56cab0d5b1d37a5a.png","type":"image/png","size":10592}],"parameters":[],"shouldDisplayMessage":false,"hasContent":true,"stepsCount":0,"attachmentsCount":1}],"labels":[{"name":"parentSuite","value":"tests.ui_tests"},{"name":"suite","value":"test_main_page"},{"name":"subSuite","value":"TestMainPage"},{"name":"host","value":"fv-az298-851"},{"name":"thread","value":"2436-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.ui_tests.test_main_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser","value":"'chrome'"},{"name":"link","value":"('css selector', 'body > header > div > div > ul > li:nth-child(3) > a')"},{"name":"page_name","value":"'reviews'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":2,"unknown":0,"total":5},"items":[{"uid":"e1c4c086d7b5474b","reportUrl":"https://Vadim-AM.github.io/Customer-service/35//#testresult/e1c4c086d7b5474b","status":"broken","statusDetails":"sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) table user already exists\n[SQL: \nCREATE TABLE user (\n\tid INTEGER NOT NULL, \n\tusername VARCHAR(64), \n\tphone_number VARCHAR(120), \n\tpassword_hash VARCHAR(128), \n\tlast_seen VARCHAR, \n\tPRIMARY KEY (id)\n)\n\n]\n(Background on this error at: https://sqlalche.me/e/14/e3q8)","time":{"start":1674631588163,"stop":1674631588163,"duration":0}},{"uid":"8e4ea422d8326bb2","reportUrl":"https://Vadim-AM.github.io/Customer-service/36//#testresult/8e4ea422d8326bb2","status":"broken","statusDetails":"sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) table user already exists\n[SQL: \nCREATE TABLE user (\n\tid INTEGER NOT NULL, \n\tusername VARCHAR(64), \n\tphone_number VARCHAR(120), \n\tpassword_hash VARCHAR(128), \n\tlast_seen VARCHAR, \n\tPRIMARY KEY (id)\n)\n\n]\n(Background on this error at: https://sqlalche.me/e/14/e3q8)","time":{"start":1674631125750,"stop":1674631125750,"duration":0}},{"uid":"9b97c2aa934c0b71","reportUrl":"https://Vadim-AM.github.io/Customer-service/35//#testresult/9b97c2aa934c0b71","status":"passed","time":{"start":1674630813940,"stop":1674630814318,"duration":378}},{"uid":"cac40f0ca75f47bd","reportUrl":"https://Vadim-AM.github.io/Customer-service/34//#testresult/cac40f0ca75f47bd","status":"passed","time":{"start":1674591829316,"stop":1674591829651,"duration":335}}]},"tags":[]},"source":"a39da613a7e60332.json","parameterValues":["'chrome'","('css selector', 'body > header > div > div > ul > li:nth-child(3) > a')","'reviews'"]}